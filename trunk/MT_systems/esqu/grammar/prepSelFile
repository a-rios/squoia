#   chunk:   
#     my	= the current chunk/node
#     parent	= the parent of the current node (may be a chunk or a node)
#     chunkparent = first antecedent that is a chunk (if parent is a chunk, chunkparent and parent are identical)
#     chunkgrandparent = chunkparent of chunkparent
#     lsibling = left sibling
#     rsibling = right sibling
#     child = a child node/chunk (condition evaluates to true if at least one child node matches)
#     chunkchild = first descendant that is a chunk
# prep source	case/adpos target (will be inserted)	condition	   default(+/-)  # comment


# Simple prepositions
#####################


# how treat ambiguous cases (cd-a, cd/ci)? better generate both..?
a	case=+Acc	chunkparent.si=cd 	- 			# veo A Juan, JuanTA rikuni
a	case=+Dat	chunkparent.si=ci || chunkparent.si=cc	+ 	# he ido a casa, wasiman rini (sp-obj), le he dado el libro a Jon, Jonman librota quni (iobj)
a	case=+Loc	xpath{child::CHUNK[@type="sn"]/NODE[@smi="W"]}	-	# hora: a las 4 de la tarde -> -pi
acerca_de	func=topic	-	+ # TODO: really topic? 
al_lado_de	form=kuska	xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[@smi="NP00SP0"]}	- # al lado de una persona
al_lado_de	form=larunpi	!(xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[@smi="NP00SP0"]})	- # al lado de otra cosa
ante		form=ñawk'iypi		xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[starts-with(@smi, "PP10S")]}
ante		form=ñawk'iykipi		xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[starts-with(@smi, "PP20S")]}
ante		form=ñawk'inchikpi,ñawk'iykupi	xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[starts-with(@smi, "PP1MP") or starts-with(@smi, "PP1FP") ]}
ante		form=ñawk'iykichikpi	xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[starts-with(@smi, "PP20P") or starts-with(@smi, "PP2FP")]}
ante		form=ñawk'inkupi		xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[starts-with(@smi, "PP30P") ]}
ante		form=ñawk'inpi		xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[starts-with(@smi, "PP30S") or starts-with(@smi, "N")]}
# TODO: antes de comer -> manaraq mikhuSPA
# TODO: aunque sea -> maskipas
antes_de	form=manaraq	xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="grup-verb"]/NODE[@mi="infinitive"]}
a_pesar_de 	form=hinata	-
a_pesar_de_todo 	form=chay_hinata	-
bajo		form=uranpi		-
cerca_de 	form=sichpapi
con		case=+Inst
# TODO: na-paq
con_objeto_de 
contra 
en_contra_de
cabe 
de	case=+Gen	chunkgrandparent.type=sn && !(xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[@smi="NP00G00"]})	-  # genitive: if head is a noun chunk and child is not a geographical proper name
de 	case=+Abl	chunkparent.type=grup-verb || xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[@smi="NP00G00"]}
de	func=attributive	xpath{parent::CHUNK[@type="grup-sp"]/CHUNK[@type="sn"]/NODE[@sem="[+Mat]"]}  # material: casa de piedra -> translate as attributive noun - rumi wasi
# TODO: de -> material, should be ablative, Mengenangaben: una tasa DE café?
debajo_de
delante_de
dentro_de
detrás_de
desde 
después_de 
desque
durante 
en 
en_virtud_de 
encima
entre 
excepto 
frente_a
al_frente_de
enfrente_de
fuera_de
hacia 
hasta
lejos_de
junto_a
mediante 
para 
por_eso
por 
sin 
sobre
tras
