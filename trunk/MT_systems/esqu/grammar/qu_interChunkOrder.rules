# head chunk condition (no more than one rule per head!) - child chunk Condition(s) (can be several chunks) - ordering ("+": immediate; ".": at some distance preceding)

#only CHUNK

## VERB CHUNKS ####

# general order within verb chunks: SOV

# order in subordinated verb chunk: first is second clause, last is head
my.type=grup-verb && xpath{child::NODE/descendant::NODE[@smi="CS"]}				suj:my.si=suj,dobj:my.si=/cd/,iobj:my.si=ci,adjunct:my.si=/cc|ao|atr/,Coma:my.type=F-term && child.smi=FC,Punct:my.type=F-term && child.smi=FP,otherchildren:xpath{self::CHUNK[not(@type="F-term") and not(@type="grup-verb") and not(@type="coor-v")]}			 adjunct .suj .dobj .iobj .otherchildren .head .Coma .Punc

# order in coordinated verb chunk: keep order of clauses
my.type=/coor-v|grup-verb/ && !(xpath{child::NODE/descendant::NODE[@smi="CS"]})			subV:my.type=/grup-verb|coor-v/&&!(my.si=/cd|gerundi/)&&xpath{child::NODE/descendant::NODE[@smi="CS"]},coV:my.type=/grup-verb|coor-v/&&!(my.si=/cd|gerundi/),suj:my.si=suj && my.type=/sn|coor-n/,dobj:my.si=/cd/ && my.type=/sn|coor-n|grup-verb|coor-v/,iobj:my.si=ci && my.type=/sn|coor-n/,adjunct:my.si=/cc|ao|atr/,Coma:my.type=F-term && child.smi=FC,Punct:my.type=F-term && child.smi=FP,gerund:my.si=gerundi,otherchildren:xpath{self::CHUNK[not(@type="F-term") and not(@type="grup-verb") and not(@type="coor-v")]}			subV .gerund .adjunct .suj .dobj .iobj .otherchildren .head .Coma .coV .Punc

### nominal chunks ####

my.type=/sn|coor-n/			rel:my.verbform=/^rel/,adj:(my.func=attributive || child.smi=/^A/),pp:(my.type=/grup-sp|coor-sp/ && !(child.postpos=/.+/) && !(child.spform=/.+/)),det:my.type=det,sn:type=sn,year:my.type=date 		 pp .year .det .rel .adj +head .sn
#my.type=/sn|coor-n/			pp:my.type=/grup-sp|coor-sp/ && !(child.postpos=/.+/) && !(child.spform=/.+/) 	pp .head


my.type=/grup-sp/&& child.postpos=/.+/			noun:my.type=/sn|coor-n/				noun .head

## general rule: head final
#xpath{self::CHUNK[not(@type="F-term")]} && xpath{child::CHUNK}		child:xpath{self::CHUNK[not(@type="F-term")]}		child .head



