# 1							2				3				4			5		6		7
# chunk1Cond						chunk1Attr			chunk2Cond			chunk2Attr		ch1ch2Path	direction	writeMode
# --------------------------------------------------------------------------------------------------------------------------- #
#  possible paths:
#	'my'			=> '.',
#	'child'			=> 'child::CHUNK',
#	'firstchild'		=> 'child::CHUNK[1]',
#	'chunkgrandchild'	=> 'descendant::CHUNK[2]',
#	'descendant'		=> 'descendant::CHUNK',
#	'parent'		=> '..',
#	'chunkparent'		=> 'ancestor::CHUNK[1]',
#	'chunkgrandparent'	=> 'ancestor::CHUNK[2]',
#	'lsibling'		=> 'preceding-sibling::CHUNK',
#	'rsibling'		=> 'following-sibling::CHUNK'




# copy attribue nouncase generated from preposition to noun in the pp
# -> this is only necessary in case the preposition is a postposition marked with 3.Sg.Poss and the noun needs a genitive suffix
# detrás de la casa: wasiPA qhipan
#my.nouncase=/.+/ && my.type=/grup-sp|coor-sp/		nouncase			my.type=sn			nouncase		child		1to2		concat

# --------------------------------------------------------------------------------------------------------------------------- #

# copy object information in addverbmi attribute in sn-chunks (clitics me,te,se) to the next higher verb chunk 
# or to the pp chunk ( a mí, a tí..) and from there to the next higher verb chunk
my.addverbmi=/.+/ && my.type=/sn|coor-n/			addverbmi				xpath{self::CHUNK[@type="grup-verb" or @type="coor-v"]/CHUNK[@type="grup-sp" and not(@spform)]/CHUNK[@type="sn"]/@addverbmi} 		addverbmi			chunkgrandparent		1to2		concat
my.addverbmi=/.+/ && my.type=/sn|coor-n/			addverbmi				xpath{self::CHUNK[@type="grup-verb" or @type="coor-v"]} && ( !(child.slem=/^ir$/marchar/) && !(child.smi=/VMM01P0|VMSP1P0/ ) )			addverbmi			parent				1to2		concat

#my.addverbmi=/.+/ && my.type=/sn|coor-n/			addverbmi				my.type=/grup-verb|coor-v/		addverbmi			chunkgrandparent		1to2		concat


# copy chunkmi from sadv (negation) to chunk above, be it nominal or verbal (independent suffixes)
my.type=/sadv/ && my.chunkmi=/.+/			chunkmi				my.type=/grup-verb|coor-v/		chunkmi			parent				1to2		concat

# copy chunkmi=+Inst in coordination from head to child (from coor-n to sn)
my.type=coor-n && my.chunkmi=+Instr			chunkmi				my.type=sn				chunkmi			child				1to2		concat	


# copy ++Poss from propietario to the possessed noun
child.slem=/propietario|dueño/ && my.chunkmi=++Poss	chunkmi			my.type=sn				chunkmi			chunkgrandchild			1to2		concat

# in a pp with a coordinated np inside: copy the case/nouncase attribute to the second coordinated np
#my.type=/grup-sp|coor-sp/ && child.type=coor-n		case			my.type=sn && chunkparent.type=coor-n			case			ancestor	1to2		overwrite
my.type=sn && chunkparent.type=coor-n 			case			my.type=/grup-sp|coor-sp/ && my.case=/.+/			case		chunkgrandparent	2to1		overwrite

# subject in nominal verb chunk: add genitive
# TODO check if thats correct: 
# ella sabe que tú te has ido -> qam(pa?) rikusqaykita yachan
my.si=/suj/ 		case		my.verbform=/perfect|obligative/ && my.case=+Acc	"+Gen"		parent		2to1		overwrite

## sólo/solamente -> copy chunkmi from sadv chunk to head
child.slem=/sólo|solamente/ && my.chunkmi=++Lim		chunkmi			my.type=/.+/		chunkmi		parent		1to2		concat


# para, a_fin_de, con_fin_de, con_objeto_de +infinitive: verbchunk is set to obligative, but needs person of verb as possessive suffix!
my.verbform=obligative && parent.type=grup-sp && parent.case=+Ben			verbmi			my.type=/grup-verb|coor-v/ && (my.verbmi=/1\.Sg\.Subj/ || my.verbmi2=/1\.Sg\.Subj/)			"+1.Sg.Poss"		ancestor	2to1	concat
my.verbform=obligative && parent.case=+Ben && parent.type=grup-sp 			verbmi			my.type=/grup-verb|coor-v/ && (my.verbmi=/1\.Pl\.Excl\.Subj/ || my.verbmi2=/1\.\Pl\.Excl.Subj/)		"+1.Pl.Excl.Poss"	ancestor	2to1	concat
parent.type=grup-sp && parent.case=+Ben && my.verbform=obligative			verbmi			my.type=/grup-verb|coor-v/ && (my.verbmi=/1\.Pl\.Incl\.Subj/ || my.verbmi2=/1\.\Pl\.Incl.Subj/)		"+1.Pl.Incl.Poss"	ancestor	2to1	concat

parent.case=+Ben && parent.type=grup-sp && my.verbform=obligative			verbmi			my.type=/grup-verb|coor-v/ && (my.verbmi=/2\.Sg.Subj/ || my.verbmi2=/2\.Sg.Subj/)			"+2.Sg.Poss"		ancestor	2to1	concat
parent.case=+Ben && my.verbform=obligative && parent.type=grup-sp 			verbmi			my.type=/grup-verb|coor-v/ && (my.verbmi=/2\.Pl.Subj/ || my.verbmi2=/2\.Pl.Subj/)			"+2.Pl.Poss"		ancestor	2to1	concat
parent.type=grup-sp && my.verbform=obligative && parent.case=+Ben			verbmi			my.type=/grup-verb|coor-v/ && (my.verbmi=/3\.Sg.Subj/ || my.verbmi2=/3\.Sg.Subj/)			"+3.Sg.Poss"		ancestor	2to1	concat
xpath{self::CHUNK[@verbform="obligative"]} && parent.type=grup-sp && parent.case=+Ben	verbmi			my.type=/grup-verb|coor-v/ && (my.verbmi=/3\.Pl.Subj/ || my.verbmi2=/1\.Pl.Subj/)			"+3.Pl.Poss"		ancestor	2to1	concat

# para, a_fin_de, con_fin_de, con_objeto_de + inf -> copy case from grup-sp to infinitive chunk
xpath{self::CHUNK[@verbform="obligative"]}  && parent.case=+Ben && parent.type=grup-sp	case			my.type=/grup-sp|coor-sp/		case		parent		2to1		concat

# subject of a relative clause with IHRC=yes (internally headed relative clause)
# -> add genitive suffix to subject
# also: add possessive suffix of subject person to (nominal) verbform if the rel.clause is not.agentive (in intrachunk.rules!)
my.type=/sn|coo-n/ && my.si=/suj/		case		my.IHRC=yes		"+Gen"		parent			2to1			concat





