#
# Rules to solve morphological ambiguity (e.g. es: borracho, de: betrunken/Betrunkener (adj vs noun)
#
# Format:
# source_lemma        target_lemma     k/d     condition            ## comment
#
# condition: if the condition evaluates to true, two actions possible:
# -> k=keep (keep only this option), d=delete  (delete this tranlsation option from output)
# shortnames in conditions:
# my -> this node, parent -> parent node, child -> child node (true if condition is met for at least one child node), 
# rsibling/lsibling -> right/left sibling node (true if condition is met for at least one sibling node to the right/left)
# chunkparent: first ancestor that is a chunk, chunkgrandparent etc.

# IMPORTANT: 
# - if more than one translation option with 'k' for a node evaluates to true, the first one will be used to fill 
#   the attributes of NODE, but the all others that evaluate to true will be kept as SYN nodes!
# - rules are stored in a hash, key is the combination of the source lemma (1st column) and target lemma (2nd column in rules)
#  --> it's not possible to have more than one rule with the same source lemma and the same target lemma!!

#gender related ambiguities
viejo		paya		k	(my.smi=/AQ0F/&&parent.sem=[+Fem])||my.smi=/NCF/
viejo		machu		k	(my.smi=/AQ0M/&&parent.sem=[+Masc])||my.smi=/NCM/
viejo		mawk'a		k	!((my.smi=/AQ0F/&&parent.sem=[+Fem])||my.smi=/NCF/) && !((my.smi=/AQ0M/&&parent.sem=[+Masc])||my.smi=/NCM/)

#vejez: payayay (fem.), machuyay (masc.)
vejez		paya		k	rsibling.headsmi=/NCF/&&rsibling.type=sp-de
vejez		machu		k	rsibling.headsmi=/NCM/&&rsibling.type=sp-de

anciano		paya		k	my.smi=/AQ.F/||parent.sem=[+Fem]
anciano		machu		k	my.smi=/AQ.M/||parent.sem=[+Masc]
anciano		yuyaq		k	!(my.smi=/AQ.M/||parent.sem=[+Masc]) && !(my.smi=/AQ.F/||parent.sem=[+Fem])

#adolescente-> smi=NCC, need to check if head noun is masc/fem or if used as noun, if fem/masc article present
adolescente	t'asqi		k	chunkparent.headsem=[+Fem]||child.smi=/D..F../||rsibling.type=sadv&&chunkgrandparent.headsem=[+Fem]
adolescente	maqta		k	chunkparent.headsem=[+Masc]||child.smi=/D..M../rsibling.type=sadv&&chunkgrandparent.headsem=[+Masc]

chico		wayna		k	my.smi=/NCM/
chico		sipas		k	my.smi=/NCF/
chico		huch'uy		k	my.smi=/AQ/

mozo		sipas		k	my.smi=/NCF/
mozo		wayna		k	my.smi=/NCM/

señor		mama		k	my.smi=/NCF/
señor		wiraqucha	k	my.smi=/NCM/

joven		sipas		k	(my.smi=/AQ/&&(chunkparent.headsem=[+Fem]||(chunkgrandparent.headsem=[+Fem]&&rsibling.type=sadv)))||(my.smi=/NC/&&child.smi=/D..F../)
joven		wayna		k	(my.smi=/AQ/&&(chunkparent.headsem=[+Masc]||(chunkgrandparent.headsem=[+Masc]&&rsibling.type=sadv)))||(my.smi=/NC/&&child.smi=/D..M../)

mozo		sipas		k	my.smi=/NCF/
mozo		wayna		k	my.smi=/NCM/

# fem/masc: warmi, qhari (human), china/urqu (animals)
# leave for language model
#feminino	warmi	k	-
#feminino	china	k	-
#masculino	qhari	k	-
#masculino	urqu	k	-

#gender distinction in kinship terms
#suegro: kaka, suegra: kisma (de hombre), kiwachi (de mujer): proper nouns..?
suegro		kaka		k	my.smi=/NCM/
suegro		kisma		k	my.smi=/NCF/&&(rsibling.headsmi=/NCM/&&rsibling.type=sp-de)
suegro		kiwachi		k	my.smi=/NCF/&&(rsibling.headsmi=/NCF/&&rsibling.type=sp-de)

#cuñada: qhachun, cuñado: qatay
cuñado		qhachun		k	my.smi=/NCF/
cuñado		masa		k	my.smi=/NCM/
concuñado	qhachun_masi	k	my.smi=/NCF/
concuñado	qatay_masi	k	my.smi=/NCM/

# hermana: ñaña (de mujer), pana (de hombre) / hermano: tura (de mujer), wawqi (de hombre) 
#(lexicon has 2 separate entries for hermana and hermano, so we don't need disambiguate only the gender 
# of the refering person, but not the gender of the sibling (only possible with de-pp (la hermana del general..))

hermano		ñaña	k	rsibling.headsmi=/NCF/&&rsibling.type=sp-de
hermano		pana	k	rsibling.headsmi=/NCM/&&rsibling.type=sp-de

hermano		tura	k	rsibling.headsmi=/NCF/&&rsibling.type=sp-de
hermano		wawqi	k	rsibling.headsmi=/NCM/&&rsibling.type=sp-de

# hija: (warmi) wawa (de mujer), ususi (de hombre) / hijo: (qhari) wawa (de mujer), churi (de hombre) 
#(lexicon has 2 separate entries for hijo and hija, so we don't need disambiguate only the gender 
# of the refering person, but not the gender of the parent (only possible with de-pp (la hija del general..))

hijo		wawa	k	rsibling.headsmi=/NCF/&&rsibling.type=sp-de
hijo		ususi	k	rsibling.headsmi=/NCM/&&rsibling.type=sp-de

hijo		wawa	k	rsibling.headsmi=/NCF/&&rsibling.type=sp-de
hijo		churi	k	rsibling.headsmi=/NCM/&&rsibling.type=sp-de


# animals that have a feminine form in Spanish: zorro, zorrillo, perro, gato
zorro		china_atuq	k	my.smi=/NCF/
zorro		atuq		k	my.smi=/NCM/
perro		china_allqu	k	my.smi=/NCF/
zorro		allqu		k	my.smi=/NMF/
zorrillo	china_añas	k	my.smi=/NCF/
zorrillo	añas		k	my.smi=/NCM/
gato		china_misi	k	my.smi=/NCF/
gato		misi		k	my.smi=/NCM/



# other ambiguities

#abochornar, calor-> rupha-, avergonzarse -> p'inqa-
#abochornar	rupha	k	-
#abochornar	p'inqa	k	-

#alto, suni (altitude), hatun -> height
# leave for language model
#alto	suni	k	-
#alto	hatun	k	-

#edad, mita (era), wata (años),TODO: edad de hielo/piedra/etc -> XPath? wäre eleganter als informationen herumschieben
edad	k	mit'a	rsibling.headslem=/hielo|bronce|piedra/||child.slem=/moderno|medio/
edad	k	wata	!(rsibling.headslem=/hielo|bronce|piedra/||child.slem=/moderno|medio/)

# encontrar -> without reflexive: tari- (encontrar algo)
# with se +locative: ka- (encontrarse en..), with con or nothing -> tinku (encontrarse con alguien)
encontrar	k	tari	!(xpath{parent::CHUNK/descendant::CHUNK/NODE[@slem="se" or @slem="me" or @slem="te"]})
encontrar	k	ka	xpath{parent::CHUNK/descendant::CHUNK/NODE[@slem="se" or @slem="me" or @slem="te"]} && xpath{parent::CHUNK/child::CHUNK/NODE[@slem="en"]}	-
encontrar	k	tinku	xpath{parent::CHUNK/descendant::CHUNK/NODE[@slem="se" or @slem="me" or @slem="te"]} && !(xpath{parent::CHUNK/child::CHUNK/NODE[@slem="en"]})	

#falta: hucha (de respeto), pisiy (ausencia), panta (error), estar en falta -> separate entry in lexicon
falta	hucha	k	my.smi=/NC/&&rsibling.headslem=respeto
falta	pisi	k	my.smi=/NC/&&rsibling.type=sp-de
falta	panta	k	my.smi=/NC/&&(child.smi=/DP/||rsibling.type=/PX/)

#feraz. Ruruq [-Anim], miraq.[+Anim]
# leave for language model
#feraz	ruru	k	-
#feraz	mira	k	-

#hacer falta (hacer falta que-> separate entry in lexicon)
# le hace falta su mama -> watu-, hace falto trabajo -> pisi-, hace falta que hablemos -> na+kan
hacer_falta	watu	k	xpath{parent::CHUNK[@type="grup-verb" or @type="coor-v"]/CHUNK[(@type="sn" or @type="coor-n") and (@si="cd-a" or @si="ci" or @si="suj")]/NODE[@smi="NP00SP0"]}
hacer_falta	pisi	k	xpath{parent::CHUNK[@type="grup-verb" or @type="coor-v"]/CHUNK[(@type="sn" or @type="coor-n") and @si="cd"]/NODE[starts-with(@smi,"NC")]}
hacer_falta	ka	k	!(xpath{parent::CHUNK[@type="grup-verb" or @type="coor-v"]/CHUNK[(@type="sn" or @type="coor-n") and (@si="cd-a" or @si="ci" or @si="suj")]/NODE[@smi="NP00SP0"]} || xpath{parent::CHUNK[@type="grup-verb" or @type="coor-v"]/CHUNK[(@type="sn" or @type="coor-n") and @si="cd"]/NODE[starts-with(@smi,"NC")]})

#lengua: qallu (de la boca), simi (idioma)
# leave for language model
#lengua	qallu	 -			0.1
#lengua	simi	 sibling.smi=/AQ.+/	0.2

#llama: llama (animal), nina (fuego)
# leave for language model
#llama	llama	k	-
#llama	nina	k	-

# propietario, kaqniyuq, but with sp-de: propietario de algo-> algoyuq
propietario	+Poss		k	xpath{following-sibling::CHUNK[@type="grup-sp"]/NODE[@slem="de"]}
propietario	ka		k	!(xpath{following-sibling::CHUNK[@type="grup-sp"]/NODE[@slem="de"]})

# dueño
dueño	unspecified	k		!(xpath{following-sibling::CHUNK[@type="grup-sp"]/NODE[@slem="de"]})
dueño	+Poss		k		xpath{following-sibling::CHUNK[@type="grup-sp"]/NODE[@slem="de"]}

#rico (dinero, poder): qhapaq, (comida) miski, hauptverb von clause -> XPath?? (nächst höherer chunk mit grup-verb..
rico		qhapaq		k	chunkgrandparent.type=grup-verb&&chunkgrandparent.headslem=ser
rico		miski		k	chunkgrandparent.type=grup-verb&&chunkgrandparent.headslem=estar

# verbs

#acertar: watu- (adivinar), chayachi- (el blanco)
# leave for language model
#acertar		watu		k	-
#acertar		chaya		k	-

# conducir pusa- (+Anim), apa- (-Anim)
# leave for language model
#conducir	pusa	k	-
#conducir	apa	k	-

# contar: yupa- (count), willa- (tell)
# leave for language model
#contar	k	yupa	-
#contar	k	willa	-

#deber deuda/algo -> manuka-, deber hacer algo -> obligative
deber	k	manuka		!(xpath{parent::NODE[starts-with(@smi,"V")]})
deber	k	+Obl		xpath{parent::NODE[starts-with(@smi,"V")]}

# acordar: yuyari- (recordar) or kamachinaku- (llegar a un acuerdo)
# if with reflexive + de-obj: yuyari, with direct object: kamachinaku
acordar		yuya	k	xpath{parent::CHUNK/CHUNK[@type="grup-sp" or @type="coor-sp"]/NODE[@slem="de"]}
acordar		kama	k	xpath{parent::CHUNK/CHUNK[@type="sn" or @type="coor-n"]/NODE[starts-with(@smi,"N") and contains(@si,"cd")]}

##### DAR ######

# dar general
dar	qu	k	!(xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="miedo"]})

# dar miedo
dar	mancha	k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="miedo"]}

##### TENER ######

# tener años
tener	ka	d	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="año"]}

# tener enemistad
tener	awqa	k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="enemistad"]}

# tener flojera, pereza
tener	qilla	k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="flojera" or @slem="pereza"]}

# tener hambre
tener	mikhunaya	k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="hambre"]}

# tener hipo
tener	hik'i	k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="hipo"]}

# tener miedo
tener	mancha	k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="miedo"]}

# tener pareja
tener	yanacha		k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="pareja"]}

# tener pena
tener	llaki	k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="pena"]}

# tener sed
tener	ununaya		k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="sed"]}

# tener sueño
tener	puñunaya	k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="sueño"]}

# tener vergüenza
tener	p'inqa		k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="vergüenza"]}

# tener compasión
tener	khuya		k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="compasión" or @slem="piedad"]}

# tener fragancia
tener	q'apa		k	xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="fragancia" or @slem="olor"]}

# tener: default, use tene-
tener	unspecified	k	!(xpath{following-sibling::CHUNK[contains(@si,"cd")]/NODE[@slem="fragancia" or @slem="olor" or @slem="compasión" or @slem="piedad" or @slem="vergüenza" or @slem="sueño" or @slem="sed" or @slem="pena" or @slem="pareja" or @slem="miedo" or @slem="hipo" or @slem="hambre" or @slem="flojera" or @slem="pereza" or @slem="enemistad" or @slem="año"]})

  #####################
  # PERSONAL PRONOUNS #
  #####################
  
# usted/ustedes
usted	k	qam		my.sform=usted
usted	k	qamkuna		my.sform=ustedes

# personal pronoun 1.Pl -> if verb is 2 pers: must be 1.pl.excl
# -> 2 > 1.pl cannot be inclusive
# nosotros/as (nos is disambiguated in morphSelection.rules)
nosotros	ñuqayku		k	xpath{ancestor::CHUNK[@type="grup-verb" or @type="coor-v"][1]/child::CHUNK[contains(@si,"cd")]/NODE[contains(@mi,"++2")]} 
