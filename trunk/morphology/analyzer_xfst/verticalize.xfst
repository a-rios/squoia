define WS [" "|"\t"|"\n"];

define NoBRPChars [\ ["]"|"["] ]* ;

define MorphTag "[" "+" NoBRPChars "]";

define PosTag "[" \ ["="|"+"] NoBRPChars "]";

define SemTag "[" "=" NoBRPChars "]";


define Morph [\ "["]+;

define AddPlaceSemtag [
!	[ [..] -> || ]
];

#define DeleteUnanalysedWordforms [
	#["\n" [\ WS]+ "\t" @-> "\n" ] .o.
	#["\t" {+?} "\n" @-> "\t\t\t\n" ||"\n" [\ WS]+ _ ]
#];

# fuegt [=] ein zwischen Wurzel/Suffixform und POS-Tag bzw. Uebersetzung
define InsertSemtag [
	[ Morph @->  ... "[" "=" "]" || ["\n" "\t" | "[" "--" "]" ] _ "[" \ "=" ]
];

define Break [
	["[" "--" "]" ->  "\n" "\t" "-"]
];

define RemoveBrackets [
 [ "]" -> 0 || _ "\n"]  # Loesche Endklammern
 .o. [ "]""[" -> "\t"] # Fuege Tab vor Sem
#.o. [ "[" -> "\t" || NoBRPChars _ ]
# .o. [ "[" ("=") @-> "\t"]
];
define SeparateSemtag [
	["[" "="  @-> "\t" || _ NoBRPChars "]" ]
];
define IndentAnalysed [
	["\n" "\t" -> "\n"]
];

define RemoveSlots [
	"[" [{+NN_}|{+VV_}|{+AS_}] {SLOT} ? "]" -> 0
];

define FixKomposita [
	"]" -> "\n-"
];

#define TabPos [ "[" -> "\t"]; # Fuege Tab vor Pos

define Tokenize [	
 	 InsertSemtag
 	.o. RemoveSlots
 	.o. Break
 	.o. SeparateSemtag
 	.o. RemoveBrackets
	.o. IndentAnalysed
	.o. FixKomposita
];
! Idee : Wortform TAB SEMTAG TAB POSTAG TAB MORPHTAG
! yuya[   =recordar,pensar][+VRoot][-]yku[VDeriv][+Aff][+SLOT1][-]y[NS][+Inf][-]ñinku[NPers][+3.PL][+SLOT3]
! yuyaykuyninku   yuya[   =recordar,pensar][VRoot][--]yku[VDeriv][+Aff][+VV_SLOT1][--]y[NS][+Inf][--]ninku[NPers][+3.Pl.Poss][+NN_SLOT3]

read regex Tokenize.i;

save stack verticalize.fst
